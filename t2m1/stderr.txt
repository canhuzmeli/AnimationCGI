In file included from /home/codio/workspace/include/eigen/Eigen/Core:234:0,
                 from /home/codio/workspace/FOSSSim/PenaltyForce.h:4,
                 from /home/codio/workspace/FOSSSim/PenaltyForce.cpp:1:
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, -1, 1> >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseStorageBase.h:42:7:   required from ‘class Eigen::DenseStorageBase<Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Matrix.h:132:7:   required from ‘class Eigen::Matrix<double, -1, 1>’
/home/codio/workspace/FOSSSim/TwoDScene.h:97:12:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
       InnerSizeAtCompileTime = int(IsVectorAtCompileTime) ? SizeAtCompileTime
                                                           ^
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/MapBase.h:35:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Block.h:232:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true>’
/home/codio/workspace/include/eigen/Eigen/src/Core/VectorBlock.h:66:47:   required from ‘class Eigen::VectorBlock<Eigen::Matrix<double, -1, 1>, 2>’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:26:38:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<2, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:39:21:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >::<anonymous enum>’ [-Wenum-compare]
In file included from /home/codio/workspace/include/eigen/Eigen/Core:234:0,
                 from /home/codio/workspace/FOSSSim/TwoDScene.h:4,
                 from /home/codio/workspace/FOSSSim/CollisionHandler.h:4,
                 from /home/codio/workspace/FOSSSim/SimpleCollisionHandler.h:1,
                 from /home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:1:
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, -1, 1> >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseStorageBase.h:42:7:   required from ‘class Eigen::DenseStorageBase<Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Matrix.h:132:7:   required from ‘class Eigen::Matrix<double, -1, 1>’
/home/codio/workspace/FOSSSim/TwoDScene.h:97:12:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
       InnerSizeAtCompileTime = int(IsVectorAtCompileTime) ? SizeAtCompileTime
                                                           ^
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, -1, -1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseStorageBase.h:42:7:   required from ‘class Eigen::DenseStorageBase<Eigen::Matrix<double, -1, -1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Matrix.h:132:7:   required from ‘class Eigen::Matrix<double, -1, -1>’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:43:24:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, -1, -1> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::ei_scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::ei_scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseNullaryOp.h:58:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::ei_scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:44:51:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, -1, -1> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::ei_scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> > > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::ei_scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> > > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:101:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::ei_scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> >, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseNullaryOp<Eigen::ei_scalar_identity_op<double>, Eigen::Matrix<double, -1, -1> > >’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:44:51:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, -1, -1> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Transpose.h:102:37:   required from ‘class Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/Transpose.h:63:37:   required from ‘class Eigen::Transpose<Eigen::Matrix<double, -1, -1> >’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:50:83:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> > > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> > > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:101:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::ei_scalar_multiple_op<double>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:50:83:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, 2, 1> >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 2, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseStorageBase.h:42:7:   required from ‘class Eigen::DenseStorageBase<Eigen::Matrix<double, 2, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Matrix.h:132:7:   required from ‘class Eigen::Matrix<double, 2, 1>’
/home/codio/workspace/FOSSSim/CollisionHandler.h:38:14:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<2, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, 2, 1> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:101:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:50:88:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, 2, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<Eigen::Matrix<double, 2, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Transpose.h:102:37:   required from ‘class Eigen::TransposeImpl<Eigen::Matrix<double, 2, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/Transpose.h:63:37:   required from ‘class Eigen::Transpose<Eigen::Matrix<double, 2, 1> >’
/home/codio/workspace/FOSSSim/CollisionHandler.h:22:111:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<1, 2>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Transpose<Eigen::Matrix<double, 2, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, -1, 1> >, 4> >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, -1, 1> >, 4> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/ProductBase.h:72:7:   required from ‘class Eigen::ProductBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, -1, 1> >, 4>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Product.h:277:7:   required from ‘class Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, -1, 1> >, 4>’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:50:96:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::ProductBase<Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, -1, 1> >, 4>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, -1, 1> > > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:101:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:94:47:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:94:48:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/MapBase.h:35:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Block.h:232:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true>’
/home/codio/workspace/include/eigen/Eigen/src/Core/VectorBlock.h:66:47:   required from ‘class Eigen::VectorBlock<Eigen::Matrix<double, -1, 1>, 2>’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:25:49:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<2, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Block<Eigen::Matrix<double, -1, 1>, 2, 1, true> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:109:23:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:39:13:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:101:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:83:47:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:101:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:137:59:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:83:48:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Transpose.h:102:37:   required from ‘class Eigen::TransposeImpl<Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/Transpose.h:63:37:   required from ‘class Eigen::Transpose<Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:143:52:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<1, -1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:101:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:126:73:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, 2, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, 2, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:101:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, 2, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, 2, 1> >’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:168:32:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<2, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, 2, 1> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/ProductBase.h:72:7:   required from ‘class Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>, Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Product.h:215:7:   required from ‘class Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:143:53:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>, Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> > > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, 2, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, 2, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:101:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, 2, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, 2, 1> >’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:172:82:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<2, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, 2, 1> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, 2, 1> > > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, 2, 1> > > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:101:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, 2, 1> >, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, 2, 1> > >’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:172:87:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<2, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, 2, 1> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, 2, 1> > > > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, 2, 1> > > > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, 2, 1> > >, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, 2, 1> > > >’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:172:88:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, 2, 1> > > > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/ProductBase.h:72:7:   required from ‘class Eigen::ProductBase<Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> >, Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/ProductBase.h:208:7:   required from ‘class Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> >’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:143:54:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::ProductBase<Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> >, Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> > > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, 2, 1> > > > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, 2, 1> > > > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, 2, 1> > >, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, 2, 1> > > >’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:178:88:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, 2, 1> > > > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> > > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> > > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:233:43:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> > > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> > > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> > > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:101:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::ei_scalar_quotient1_op<double>, Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> >, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> > >’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:143:73:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::ProductBase<Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> >, Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> > > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:101:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:244:62:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Matrix<double, 1, 2> >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::Matrix<double, 1, 2> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseStorageBase.h:42:7:   required from ‘class Eigen::DenseStorageBase<Eigen::Matrix<double, 1, 2> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Matrix.h:132:7:   required from ‘class Eigen::Matrix<double, 1, 2>’
/home/codio/workspace/include/eigen/Eigen/src/Core/IO.h:245:62:   required from ‘std::ostream& Eigen::operator<<(std::ostream&, const Eigen::DenseBase<Derived>&) [with Derived = Eigen::Transpose<Eigen::Matrix<double, 2, 1> >; std::ostream = std::basic_ostream<char>]’
/home/codio/workspace/FOSSSim/CollisionHandler.h:22:111:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<1, 2>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, 1, 2> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, 1, true> >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, 1, true> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/MapBase.h:35:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, 1, true> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Block.h:232:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, 1, true>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CommaInitializer.h:94:36:   required from ‘Eigen::CommaInitializer<MatrixType>& Eigen::CommaInitializer<MatrixType>::operator,(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, -1>; XprType = Eigen::Matrix<double, -1, -1>]’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:48:29:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Block<Eigen::Matrix<double, -1, -1>, 1, 1, true> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:44:46:   required from ‘static typename Eigen::ei_traits<Derived>::Scalar Eigen::ei_dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; U = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; bool NeedToTranspose = false; typename Eigen::ei_traits<Derived>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:80:64:   required from ‘typename Eigen::ei_traits<T>::Scalar Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; typename Eigen::ei_traits<T>::Scalar = double]’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:39:28:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_abs2_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_abs2_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:101:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::ei_scalar_abs2_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::ei_scalar_abs2_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:92:43:   required from ‘typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:102:30:   required from ‘typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real Eigen::MatrixBase<Derived>::norm() const [with Derived = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real = double]’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:74:58:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true> >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/MapBase.h:35:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Block.h:232:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CommaInitializer.h:96:61:   required from ‘Eigen::CommaInitializer<MatrixType>& Eigen::CommaInitializer<MatrixType>::operator,(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, -1, -1>; XprType = Eigen::Matrix<double, -1, -1>]’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:48:29:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, -1, true> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:44:46:   required from ‘static typename Eigen::ei_traits<Derived>::Scalar Eigen::ei_dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; U = Eigen::Matrix<double, -1, 1>; bool NeedToTranspose = false; typename Eigen::ei_traits<Derived>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:80:64:   required from ‘typename Eigen::ei_traits<T>::Scalar Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; typename Eigen::ei_traits<T>::Scalar = double]’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:91:43:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:101:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::ei_scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::ei_scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:92:43:   required from ‘typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:102:30:   required from ‘typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real Eigen::MatrixBase<Derived>::norm() const [with Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real = double]’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:93:28:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:101:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::ei_scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::ei_scalar_abs2_op<double>, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:92:43:   required from ‘typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:102:30:   required from ‘typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real Eigen::MatrixBase<Derived>::norm() const [with Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real = double]’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:40:30:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:44:46:   required from ‘static typename Eigen::ei_traits<Derived>::Scalar Eigen::ei_dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Matrix<double, -1, 1>; U = Eigen::Matrix<double, -1, 1>; bool NeedToTranspose = false; typename Eigen::ei_traits<Derived>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:80:64:   required from ‘typename Eigen::ei_traits<T>::Scalar Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::ei_traits<T>::Scalar = double]’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:128:34:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_abs2_op<double>, Eigen::Matrix<double, 2, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_abs2_op<double>, Eigen::Matrix<double, 2, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:101:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::ei_scalar_abs2_op<double>, Eigen::Matrix<double, 2, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::ei_scalar_abs2_op<double>, Eigen::Matrix<double, 2, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:92:43:   required from ‘typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::Matrix<double, 2, 1>; typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:102:30:   required from ‘typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real Eigen::MatrixBase<Derived>::norm() const [with Derived = Eigen::Matrix<double, 2, 1>; typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real = double]’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:168:32:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<2, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, 2, 1> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:44:46:   required from ‘static typename Eigen::ei_traits<Derived>::Scalar Eigen::ei_dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; U = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; bool NeedToTranspose = false; typename Eigen::ei_traits<Derived>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:80:64:   required from ‘typename Eigen::ei_traits<T>::Scalar Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; typename Eigen::ei_traits<T>::Scalar = double]’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:86:37:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, 2, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, 2, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_product_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, 2, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, 2, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:44:46:   required from ‘static typename Eigen::ei_traits<Derived>::Scalar Eigen::ei_dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >; U = Eigen::Matrix<double, 2, 1>; bool NeedToTranspose = false; typename Eigen::ei_traits<Derived>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:80:64:   required from ‘typename Eigen::ei_traits<T>::Scalar Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, 2, 1>; Derived = Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >; typename Eigen::ei_traits<T>::Scalar = double]’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:172:66:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >, Eigen::Matrix<double, 2, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_abs2_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseUnaryOp<Eigen::ei_scalar_abs2_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:101:7:   required from ‘class Eigen::CwiseUnaryOpImpl<Eigen::ei_scalar_abs2_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:68:7:   required from ‘class Eigen::CwiseUnaryOp<Eigen::ei_scalar_abs2_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:92:43:   required from ‘typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real Eigen::MatrixBase<Derived>::squaredNorm() const [with Derived = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:102:30:   required from ‘typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real Eigen::MatrixBase<Derived>::norm() const [with Derived = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; typename Eigen::NumTraits<typename Eigen::ei_traits<Derived>::Scalar>::Real = double]’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:86:58:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >, Eigen::Matrix<double, 2, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >, Eigen::Matrix<double, 2, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_product_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >, Eigen::Matrix<double, 2, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >, Eigen::Matrix<double, 2, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:44:46:   required from ‘static typename Eigen::ei_traits<Derived>::Scalar Eigen::ei_dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >; U = Eigen::Matrix<double, 2, 1>; bool NeedToTranspose = false; typename Eigen::ei_traits<Derived>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:80:64:   required from ‘typename Eigen::ei_traits<T>::Scalar Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, 2, 1>; Derived = Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >; typename Eigen::ei_traits<T>::Scalar = double]’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:244:74:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> > > >, Eigen::Matrix<double, 2, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:44:46:   required from ‘static typename Eigen::ei_traits<Derived>::Scalar Eigen::ei_dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; U = Eigen::Matrix<double, -1, 1>; bool NeedToTranspose = false; typename Eigen::ei_traits<Derived>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:80:64:   required from ‘typename Eigen::ei_traits<T>::Scalar Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, -1, 1>; Derived = Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >; typename Eigen::ei_traits<T>::Scalar = double]’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:137:35:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::CwiseBinaryOp<Eigen::ei_scalar_difference_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, -1, 1> >, Eigen::Matrix<double, -1, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, 2, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, 2, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:168:7:   required from ‘class Eigen::CwiseBinaryOpImpl<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, 2, 1>, Eigen::Dense>’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:101:7:   required from ‘class Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, 2, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:44:46:   required from ‘static typename Eigen::ei_traits<Derived>::Scalar Eigen::ei_dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Matrix<double, -1, 1>; U = Eigen::Matrix<double, 2, 1>; bool NeedToTranspose = false; typename Eigen::ei_traits<Derived>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Dot.h:80:64:   required from ‘typename Eigen::ei_traits<T>::Scalar Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<double, 2, 1>; Derived = Eigen::Matrix<double, -1, 1>; typename Eigen::ei_traits<T>::Scalar = double]’
/home/codio/workspace/FOSSSim/SimpleCollisionHandler.cpp:275:56:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::CwiseBinaryOp<Eigen::ei_scalar_product_op<double>, Eigen::Matrix<double, -1, 1>, Eigen::Matrix<double, 2, 1> > >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::ei_scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::ei_scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseNullaryOp.h:58:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::ei_scalar_constant_op<double>, Eigen::Matrix<double, -1, 1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseNullaryOp.h:311:52:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseBase<Derived>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseNullaryOp.h:459:31:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, -1, 1>]’
/home/codio/workspace/include/eigen/Eigen/src/Core/ProductBase.h:109:43:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, -1, 1> >, 4>; Lhs = Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >; Rhs = Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, -1, 1> >]’
/home/codio/workspace/include/eigen/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, -1, 1> >, 4>; Lhs = Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >; Rhs = Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, -1, 1> >; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:50:96:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/MapBase.h:35:34:   required from ‘class Eigen::MapBase<Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Map.h:110:79:   required from ‘class Eigen::Map<Eigen::Matrix<double, -1, 1>, 0, Eigen::Stride<0, 0> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Product.h:389:104:   required from ‘static void Eigen::ei_gemv_selector<2, 1, true>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, -1, 1> >, 4>; Dest = Eigen::Matrix<double, -1, 1>; typename ProductType::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Product.h:296:103:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 4>::scaleAndAddTo(Dest&, Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar) const [with Dest = Eigen::Matrix<double, -1, 1>; Lhs = Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >; Rhs = Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, -1, 1> >; Eigen::GeneralProduct<Lhs, Rhs, 4>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/ProductBase.h:118:63:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::scaleAndAddTo(Dest&, Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, -1, 1> >, 4>; Lhs = Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >; Rhs = Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, -1, 1> >; Eigen::ProductBase<Derived, Lhs, Rhs>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/ProductBase.h:109:85:   required from ‘void Eigen::ProductBase<Derived, Lhs, Rhs>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, 1>; Derived = Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, -1, 1> >, 4>; Lhs = Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >; Rhs = Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, -1, 1> >]’
/home/codio/workspace/include/eigen/Eigen/src/Core/ProductBase.h:127:7:   required from ‘Eigen::ProductBase<Derived, Lhs, Rhs>::operator const PlainObject&() const [with Derived = Eigen::GeneralProduct<Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >, Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, -1, 1> >, 4>; Lhs = Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Transpose<Eigen::Matrix<double, -1, -1> > >; Rhs = Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<double>, Eigen::Matrix<double, -1, 1> >; Eigen::ProductBase<Derived, Lhs, Rhs>::PlainObject = Eigen::Matrix<double, -1, 1>]’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:50:96:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, -1, 1> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::ei_scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::ei_scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseNullaryOp.h:58:7:   required from ‘class Eigen::CwiseNullaryOp<Eigen::ei_scalar_constant_op<double>, Eigen::Matrix<double, -1, -1> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseNullaryOp.h:311:52:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<double, -1, -1>; Eigen::DenseBase<Derived>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseNullaryOp.h:459:31:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<double, -1, -1>]’
/home/codio/workspace/include/eigen/Eigen/src/Core/ProductBase.h:224:43:   required from ‘void Eigen::ScaledProduct<NestedProduct>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, -1, -1>; NestedProduct = Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>]’
/home/codio/workspace/include/eigen/Eigen/src/Core/ProductBase.h:246:3:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/codio/workspace/include/eigen/Eigen/src/Core/Assign.h:505:123:   required from ‘static Derived& Eigen::ei_assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, -1>; OtherDerived = Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> >]’
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseStorageBase.h:479:98:   required from ‘Derived& Eigen::DenseStorageBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Matrix.h:285:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:77:35:   required from ‘Eigen::CwiseUnaryOp<UnaryOp, MatrixType>::CwiseUnaryOp(const XprType&, const UnaryOp&) [with UnaryOp = Eigen::ei_scalar_quotient1_op<double>; XprType = Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> >]’
/home/codio/workspace/include/eigen/Eigen/src/Core/../plugins/CommonCwiseUnaryOps.h:79:55:   required from ‘const Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<typename Eigen::ei_traits<Derived>::Scalar>, Derived> Eigen::MatrixBase<Derived>::operator/(const Scalar&) const [with Derived = Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> >; typename Eigen::ei_traits<Derived>::Scalar = double; Eigen::MatrixBase<Derived>::Scalar = double]’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:143:73:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, -1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Matrix<double, -1, -1> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/MapBase.h:35:34:   required from ‘class Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/Block.h:232:7:   required from ‘class Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>’
/home/codio/workspace/include/eigen/Eigen/src/Core/Product.h:241:19:   required from ‘static void Eigen::ei_outer_product_selector<0>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>; Dest = Eigen::Matrix<double, -1, -1>; typename ProductType::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Product.h:229:110:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 2>::scaleAndAddTo(Dest&, Eigen::GeneralProduct<Lhs, Rhs, 2>::Scalar) const [with Dest = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::Matrix<double, -1, 1>; Rhs = Eigen::Transpose<Eigen::Matrix<double, -1, 1> >; Eigen::GeneralProduct<Lhs, Rhs, 2>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/ProductBase.h:233:63:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/codio/workspace/include/eigen/Eigen/src/Core/Assign.h:505:123:   required from ‘static Derived& Eigen::ei_assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, -1>; OtherDerived = Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> >]’
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseStorageBase.h:479:98:   required from ‘Derived& Eigen::DenseStorageBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Matrix.h:285:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:77:35:   required from ‘Eigen::CwiseUnaryOp<UnaryOp, MatrixType>::CwiseUnaryOp(const XprType&, const UnaryOp&) [with UnaryOp = Eigen::ei_scalar_quotient1_op<double>; XprType = Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> >]’
/home/codio/workspace/include/eigen/Eigen/src/Core/../plugins/CommonCwiseUnaryOps.h:79:55:   required from ‘const Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<typename Eigen::ei_traits<Derived>::Scalar>, Derived> Eigen::MatrixBase<Derived>::operator/(const Scalar&) const [with Derived = Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> >; typename Eigen::ei_traits<Derived>::Scalar = double; Eigen::MatrixBase<Derived>::Scalar = double]’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:143:73:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >::<anonymous enum>’ [-Wenum-compare]
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h: In instantiation of ‘class Eigen::DenseBase<Eigen::SelfCwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> > >’:
/home/codio/workspace/include/eigen/Eigen/src/Core/MatrixBase.h:55:34:   required from ‘class Eigen::MatrixBase<Eigen::SelfCwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> > >’
/home/codio/workspace/include/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:47:56:   required from ‘class Eigen::SelfCwiseBinaryOp<Eigen::ei_scalar_sum_op<double>, Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseBinaryOp.h:227:56:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::ei_scalar_multiple_op<double>, Eigen::Matrix<double, -1, 1> >; Derived = Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true>]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Product.h:241:19:   required from ‘static void Eigen::ei_outer_product_selector<0>::run(const ProductType&, Dest&, typename ProductType::Scalar) [with ProductType = Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2>; Dest = Eigen::Matrix<double, -1, -1>; typename ProductType::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Product.h:229:110:   required from ‘void Eigen::GeneralProduct<Lhs, Rhs, 2>::scaleAndAddTo(Dest&, Eigen::GeneralProduct<Lhs, Rhs, 2>::Scalar) const [with Dest = Eigen::Matrix<double, -1, -1>; Lhs = Eigen::Matrix<double, -1, 1>; Rhs = Eigen::Transpose<Eigen::Matrix<double, -1, 1> >; Eigen::GeneralProduct<Lhs, Rhs, 2>::Scalar = double]’
/home/codio/workspace/include/eigen/Eigen/src/Core/ProductBase.h:233:63:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/codio/workspace/include/eigen/Eigen/src/Core/Assign.h:505:123:   required from ‘static Derived& Eigen::ei_assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, -1, -1>; OtherDerived = Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> >]’
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseStorageBase.h:479:98:   required from ‘Derived& Eigen::DenseStorageBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> >; Derived = Eigen::Matrix<double, -1, -1>]’
/home/codio/workspace/include/eigen/Eigen/src/Core/Matrix.h:285:31:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> >; _Scalar = double; int _Rows = -1; int _Cols = -1; int _Options = 0; int _MaxRows = -1; int _MaxCols = -1]’
/home/codio/workspace/include/eigen/Eigen/src/Core/CwiseUnaryOp.h:77:35:   required from ‘Eigen::CwiseUnaryOp<UnaryOp, MatrixType>::CwiseUnaryOp(const XprType&, const UnaryOp&) [with UnaryOp = Eigen::ei_scalar_quotient1_op<double>; XprType = Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> >]’
/home/codio/workspace/include/eigen/Eigen/src/Core/../plugins/CommonCwiseUnaryOps.h:79:55:   required from ‘const Eigen::CwiseUnaryOp<Eigen::ei_scalar_quotient1_op<typename Eigen::ei_traits<Derived>::Scalar>, Derived> Eigen::MatrixBase<Derived>::operator/(const Scalar&) const [with Derived = Eigen::ScaledProduct<Eigen::GeneralProduct<Eigen::Matrix<double, -1, 1>, Eigen::Transpose<Eigen::Matrix<double, -1, 1> >, 2> >; typename Eigen::ei_traits<Derived>::Scalar = double; Eigen::MatrixBase<Derived>::Scalar = double]’
/home/codio/workspace/FOSSSim/PenaltyForce.cpp:143:73:   required from here
/home/codio/workspace/include/eigen/Eigen/src/Core/DenseBase.h:163:59: warning: enumeral mismatch in conditional expression: ‘Eigen::ei_size_at_compile_time<-1, 1>::<anonymous enum>’ vs ‘Eigen::ei_traits<Eigen::Block<Eigen::Matrix<double, -1, -1>, -1, 1, true> >::<anonymous enum>’ [-Wenum-compare]
chmod: changing permissions of ‘/home/codio/workspace/.guides’: Operation not permitted
